@*

@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web

@{ var selection = Model.Content.Site().Children.Where(x => x.IsVisible()).ToArray(); }

@if (selection.Length > 0)
{
<ul class="nav navbar-nav navbar-right">

    @foreach (var item in selection)
    {
    if (item.Children.Count() > 0)
    {
    <li class="dropdown">
        <a class="dropdown-toggle" data-toggle="dropdown" role="button">
            @item.Name
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            @foreach (IPublishedContent subMenuItem in item.Children)
            {
            <li class="@(item.IsAncestorOrSelf(Model.Content) ? " current" : null)">
                <a href="@subMenuItem.Url">@subMenuItem.Name</a>
            </li>
            }
        </ul>
    </li>

    }
    else
    {
    <li class="@(item.IsAncestorOrSelf(Model.Content) ? " current" : null)">
        <a href="@item.Url">@item.Name</a>
    </li>
    }

    }


</ul>
}

*@

@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web


@{ var root = Model.Content.Site(); }
@{ var selection = Model.Content.Site().Children.Where(x => x.IsVisible()).ToArray(); }


@if (selection.Length > 0)
{
    <ul class="nav navbar-nav">
        @foreach (var item in selection)
        {
            if (item.Children.Where(x => x.IsVisible()).Count() > 0)
            {
                <li class="dropdown">
                    <a class="dropdown-toggle nav-link" href="@item.Url">
                        @item.Name
                        <b class="caret"> </b>
                    </a>
                    <ul class="dropdown-menu navbar-link">
                        @foreach (IPublishedContent subMenuItem in item.Children.Where(x => x.IsVisible()))
                        {

                            var isProtected = umbraco.library.IsProtected(subMenuItem.Id, subMenuItem.Path);
                            var loginAccess = umbraco.library.IsProtected(subMenuItem.Id, subMenuItem.Path) && umbraco.library.HasAccess(subMenuItem.Id, subMenuItem.Path);

                            if (!isProtected || loginAccess)
                            {
                                <li class="nav-item">
                                    <a class="dropdown-item" href="@subMenuItem.Url">@subMenuItem.Name</a>
                                </li>
                            }

                        }
                    </ul>
                </li>
            }
            else
            {
                <li class="@(item.IsAncestorOrSelf(Model.Content) ? "current" : null)">
                    <a href="@item.Url">@item.Name</a>
                </li>
            }
        }
    </ul>
}

